---
- hosts: all
  roles:
    - common

- hosts: install-server
  vars:
    add_k1s_hypervisor: true
  tasks:
    - name: Prepare instance
      include_role:
        name: '{{ item }}'
      loop:
        - prepare-test-env
        - install-ci-repository
        - install-sfconfig
        - configure-sfconfig

    - name: Configure hostname and fqdn
      include_role:
        name: configure-fqdn
      vars:
        domain: sfdomain.com

    - name: Run sfconfig
      include_role:
        name: run-sfconfig

    - command: "logger --tag ci-sfconfig first sfconfig: completed"

    - name: Update hostname and fqdn to sftests.com
      include_role:
        name: configure-fqdn
      vars:
        domain: sftests.com

    - command: "logger --tag ci-sfconfig fqdn changed"

    - name: Run sfconfig to update the deployment fqdn
      include_role:
        name: run-sfconfig
      vars:
        sfconfig_args: --skip-install --provision-demo

    - command: "logger --tag ci-sfconfig second sfconfig: completed"

    - name: Wait for scheduler reconfiguration
      register: _zuul_status
      retries: '900'
      until: '''json'' in _zuul_status and _zuul_status.json and ''periodic'' in _zuul_status.content'
      uri:
        return_content: 'yes'
        status_code: '200'
        url: 'http://managesf.sftests.com:9000/api/tenant/local/pipelines'

    - name: Run functional tests and health-check
      include_role:
        name: '{{ item }}'
      loop:
        - setup-test-env
        - run-provisioner
        - run-backup-create
        - run-health-check
        - run-firehose-listener
        - run-functional-tests
        - check-firehose-events

    - name: Erase the system
      include_role:
        name: run-erase

    - name: Install sfconfig package
      include_role:
        name: install-sfconfig

    - name: Restore the backup
      include_role:
        name: run-sfconfig
      vars:
        sfconfig_args: --recover

#    - name: Validate backup recovery
#      include_role:
#        name: run-checker

    - name: Deploy a new service with a database
      include_role:
        name: '{{ item }}'
      loop:
        - configure-sfconfig
        - run-sfconfig
      vars:
        add_component:
          - component: etherpad
      when: sf_arch == "minimal"
