---
#
# Create a new project
# Add project-unit-test to config repo
# Verify config-update
# Submit a bad change and verify Jenkins CI -1
# Fix bad change and verify Jenkins CI +1
#
- hosts: managesf
  gather_facts: no
  vars:
    project: "{{ lookup('env', 'SF_PROJECT') }}"
    admin_password: "{{ lookup('env', 'SF_PASSWORD') }}"
    fqdn: "{{ lookup('env', 'SF_FQDN') }}"
    testname: "unit-tests"
    node_label: "master"
  tasks:
    - include: tasks/project_create.yaml

    - stat: path=/var/lib/jenkins/jobs/{{ project }}-{{ testname }}
      register: job_created

    - include: tasks/config_add_zuul_project.yaml
      when: "job_created.stat.isdir is not defined"
    - include: tasks/config_submit_change.yaml
      when: "job_created.stat.isdir is not defined"

    - name: Commit bad change and check for test error
      command: chdir=build-{{ project }} {{ item }}
      with_items:
        - 'bash -c "(echo exit 1; date) > run_tests.sh"' # Add date to prevent (no new changes reject)
        - 'chmod +x run_tests.sh'
        - 'git add run_tests.sh'
        - 'git commit -m "Test {{ project }} repo"'
        - 'submit_and_wait.py --failure'

    - name: "Update change and check for test SUCCESS"
      command: chdir=build-{{ project }} {{ item }}
      with_items:
        - 'bash -c "(echo exit 0; date) > run_tests.sh"' # Add date to prevent (no new changes reject)
        - 'git commit -a --amend'
        - 'submit_and_wait.py --approve'
        - 'git fetch --all'
      environment: {'EDITOR':'test'}

    - name: "Check change was merged"
      command: chdir=build-{{ project }} git diff HEAD origin/master
      register: diff
      failed_when: "diff.stdout != ''"
