This is a collection of playbook to test and control service behavior.
They are designed to run from the install-server to use the dynamic inventory.

Each playbook test a specific service:


gerritbot.yaml
---------
* Start fake_ircd service
* Setup gerritbot and start service
* Check gerritbot connect to gerrit and irc
* Check gerritbot send irc message
* Test gerritbot config-update
* Check gerritbot send irc message to correct channel

nodepool.yaml
---------
* Setup provider with sfconfig.py
* Add image and node label to config-repo
* Check if slave are running

swiftlogs.yaml
---------
* Create swift container
* Setup logexport with sfconfig.py

zuul.yaml
---------
* Create a new project
* Add jobs and zuul layout to config repo
* Submit a bad change and verify Jenkins CI -1
* Fix bad change and verify Jenkins CI +1
* Check if change got merged
* Check logs export

playbooks/config_reset.yaml
---------
* Reset {{ config_path }} checkout and update to origin/master

playbooks/config_submit_change.yaml
---------
* Submit and wait config repo change
* Check for SUCCESS in config-update post job log

playbooks/gerritbot_fakeircd_check.yaml
---------
* Check for a pattern in fake_ircd logs

playbooks/jenkins_check_job.yaml
---------
* Check if a jenkins jobs exists

playbooks/managesf_project_create.yaml
---------
* Create project and checkout or update local clone

playbooks/sfconfig_logs_setup.yaml
---------
* Setup logs export

playbooks/sfconfig_nodepool_setup.yaml
---------
* Setup cloud provider

playbooks/zuul_check_layout.yaml
---------
* Check if a zuul job and project are defined


# Render above doc using:
for pb in *.yaml playbooks/*.yaml; do echo -e "$pb\n---------\n$(grep "^# \*" $pb | sed 's/^# //')\n"; done
