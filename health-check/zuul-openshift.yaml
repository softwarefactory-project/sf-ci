- hosts: zuul-executor
  tasks:
    - name: "Set executor keep mode"
      command: >
        /opt/rh/rh-python35/root/bin/zuul-executor
            -c /etc/opt/rh/rh-python35/zuul/zuul.conf keep

    - name: "Set executor verbose mode"
      command: >
        /opt/rh/rh-python35/root/bin/zuul-executor
            -c /etc/opt/rh/rh-python35/zuul/zuul.conf verbose


- hosts: install-server
  remote_user: root
  tasks:
    - name: Setup demo-project zuul.yaml configuration
      copy:
        content: |
          ---
          - job:
              name: openshift-test
              parent: base-openshift
              run: test.yaml
              vars:
                base_image: "python:3.6"

          - project:
              check:
                jobs:
                  - openshift-test
              gate:
                jobs:
                  - noop
        dest: /root/demo-project/.zuul.yaml

    - name: Setup demo-project test.yaml playbook
      copy:
        content: |
          ---
          - hosts: localhost
            tasks:
              - name: Fetch pods list from pre run
                include_vars:
                  file: "{{'{{'}} zuul.executor.work_root {{'}}'}}/pods.yaml"

              - add_host:
                  name: "{{'{{'}} item.pod {{'}}'}}"
                  group: "{{'{{'}} item.name {{'}}'}}"
                  ansible_connection: kubectl
                with_items: "{{'{{'}} pods {{'}}'}}"

          - hosts: demo-project
            tasks:
              - command: ls
              - command: python demo.py
                register: demo_output
              - debug: var=demo_output.stdout
              - fail:
                when: "'Hello' not in demo_output.stdout"
        dest: /root/demo-project/.zuul.yaml

    - name: Submit change and check for SUCCESS
      command: "{{ item }}"
      args:
        chdir: /root/demo-project
      with_items:
        - git add .zuul.yaml test.yaml
        - git commit -m "Test openshift-base job"
        - /usr/share/sf-config/scripts/submit_and_wait.py --delay 1200 --approve
        - git fetch --all
      environment: {'EDITOR':'test'}

    - name: "Check change was merged"
      command: chdir=/root/demo-project git diff HEAD origin/master
      register: diff
      failed_when: diff.stdout != ''
